version: '3.3'

services: 
  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - 'kafka'

  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper
    networks:
      - 'kafka'

  control-center:
    image: 'confluentinc/cp-enterprise-control-center:latest'
    restart: always
    depends_on:
      - zookeeper
      - kafka
    ports: 
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'localhost:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_REPLICATION_FACTOR: 2
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 2
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 2
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 2
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 2
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 2
      CONTROL_CENTER_CONNECT_CLUSTER: http://connect:8083
      CONTROL_CENTER_ID: "CC"
      PORT: 9021 
    networks:
      - 'kafka'
      
  postgres:
    container_name: orders-database
    image: "postgres:13.5-alpine"
    restart: always
    volumes:
      - postgres-orders-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: [
          "CMD",
          "pg_isready",
          "-h", "localhost",
          "-U", "orders",
          "-d", "orders"
      ]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=usr_orders
      - POSTGRES_PASSWORD=usr_orders
      - POSTGRES_DB=orders
    networks:
      - 'postgres'

networks:
  kafka:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres-orders-data: