version: '3.7'

services: 
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
      
  rabbitmq:
    image: rabbitmq:3.8.16-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports: 
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEAFULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/

  postgres:
    container_name: orders-database
    image: "postgres:13.5-alpine"
    volumes:
      - postgres-orders-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: [
          "CMD",
          "pg_isready",
          "-h", "localhost",
          "-U", "orders",
          "-d", "orders"
      ]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=usr_orders
      - POSTGRES_PASSWORD=usr_orders
      - POSTGRES_DB=orders

volumes:
  postgres-orders-data: